{"version":3,"sources":["features/users/User/User.module.css","assets/user.png","App/app-reducer.ts","api/api.ts","features/users/users-reducer.ts","features/users/User/User.tsx","features/users/Users.tsx","features/authorization/Login/loginReducer.ts","components/ErrorSnackbar/ErrorSnackbar.tsx","App/Main/Main.tsx","features/authorization/Login/Login.tsx","features/authorization/Registration/registReducer.ts","features/authorization/Registration/Registration.tsx","features/users/AddUser/AddUser.tsx","components/Redirect/AuthRedirect.tsx","components/routes/Pages.tsx","components/routes/Routes.tsx","App/App.tsx","reportWebVitals.ts","App/store.ts","index.tsx","features/users/AddUser/AddUser.module.css","features/authorization/Login/Login.module.css","features/authorization/Registration/Registration.module.css","App/Main/Main.module.css"],"names":["module","exports","initialState","status","error","appReducerActions","IS_INITIALIZED","SET_VALIDATION","setAppStatusAC","type","setAppErrorAC","instance","axios","create","baseURL","UserAPI","get","payload","post","id","put","userReducerActions","GET_ALL_USERS","ADD_USER","UPDATE_USER","User","props","dispatch","useDispatch","user","useState","editMode","setEditMode","name","setName","username","setUsername","email","setEmail","phone","setPhone","website","setWebsite","address","city","setCity","street","setStreet","suite","setSuite","company","companyName","setCompanyName","catchPhrase","setCatchPhrase","setError","onSave","arr","i","length","trimmed","trim","validate","getState","a","response","users","updated","map","u","data","params","console","log","updateUser","onKeyPressHandler","e","charCode","className","s","wrapper","picture","src","userPng","alt","editIcon","saveIcon","IconButton","color","onClick","SaveRounded","CancelOutlined","EditRounded","info","inputs","TextField","label","value","onChange","currentTarget","autoFocus","onKeyPress","infoItem","title","Users","useSelector","state","isAdmin","login","loggedId","history","useHistory","editUser","style","push","PATH","AddCircleOutline","isLoggedIn","loginReducerActions","SET_IS_LOGGED_IN","LOG_OUT","LogIn","password","registration","registeredUsers","find","undefined","Alert","elevation","variant","ErrorSnackbar","app","handleClose","event","reason","isOpen","Snackbar","open","autoHideDuration","onClose","severity","Main","useEffect","header","AppBar","position","Toolbar","edge","GroupWork","Typography","Button","LinearProgress","container","Login","formik","useFormik","initialValues","values","errors","test","onSubmit","resetForm","to","MAIN","bgrImg","form","handleSubmit","REGISTER","inputStyle","margin","getFieldProps","errorStyle","touched","registrationReducerActions","ADD_REGISTERED_USER","UPDATE_REGISTERED_USER","addUser","Date","now","Registration","passwordCheck","checkEmail","LOGIN","AddUser","goBack","content","cancelBtn","left","right","AuthRedirect","React","memo","children","restProps","mappedRoutes","_id","path","exact","page","p","render","Routes","App","Helmet","charSet","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ca08aec5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"User_wrapper__11eGm\",\"editIcon\":\"User_editIcon__3BqOS\",\"saveIcon\":\"User_saveIcon__33vUz\",\"picture\":\"User_picture__3Zqvq\",\"info\":\"User_info__XrYKi\",\"infoItem\":\"User_infoItem__29u6j\",\"title\":\"User_title__2bXxy\",\"name\":\"User_name__10TJV\"};","export default __webpack_public_path__ + \"static/media/user.07073b35.png\";","const initialState = {\n  status: 'idle' as AppStatusType,\n  error: null as string | null\n};\n\nexport const appReducer = (state: InitialStateType = initialState, action: AppActionTypes): InitialStateType => {\n  switch (action.type) {\n    case appReducerActions.IS_INITIALIZED:\n      return { ...state, status: action.status };\n    case appReducerActions.SET_VALIDATION:\n      return { ...state, error: action.error };\n    default:\n      return state;\n  }\n};\n\n//AC\nconst appReducerActions = {\n  IS_INITIALIZED: 'app/IS_INITIALIZED',\n  SET_VALIDATION: 'app/SET_VALIDATION',\n} as const;\nexport const setAppStatusAC = (status: AppStatusType) =>\n({\n  type: appReducerActions.IS_INITIALIZED,\n  status,\n} as const);\n\nexport const setAppErrorAC = (error: string | null) =>\n  ({ type: appReducerActions.SET_VALIDATION, error } as const);\n\n//types\ntype InitialStateType = typeof initialState;\nexport type AppActionTypes = IsInitializedType;\nexport type SetAppStatusAT = ReturnType<typeof setAppStatusAC>;\nexport type SetAppErrorAT = ReturnType<typeof setAppErrorAC>;\n\nexport type IsInitializedType = SetAppStatusAT | SetAppErrorAT;\n\nexport type AppStatusType = 'idle' | 'loading' | 'succeeded' | 'failed';\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://jsonplaceholder.typicode.com/',\n});\n\n//API\nexport const UserAPI = {\n  getAllUsers() {\n    return instance.get<UsersResponseType[]>('users');\n  },\n  addUser(payload: Omit<UsersResponseType, 'id'>) {\n    return instance.post<UsersResponseType>('users', payload);\n  },\n  updateUser(payload: UsersResponseType) {\n    const id = payload.id;\n    return instance.put<UsersResponseType>(`users/${id}`, payload);\n  },\n};\n\n\n\n\n//TYPES\nexport type UsersResponseType = {\n  id: number,\n  name: string,\n  username: string,\n  email: string,\n  address: {\n    street: string,\n    suite: string,\n    city: string,\n    zipcode?: number,\n    geo?: {\n      lat: number,\n      lng: number\n    }\n  },\n  phone: string,\n  website: string,\n  company: {\n    name: string,\n    catchPhrase: string,\n    bs?: string\n  }\n};\n","import { setAppErrorAC, setAppStatusAC } from './../../App/app-reducer';\nimport { Dispatch } from 'redux';\nimport { UserAPI, UsersResponseType } from '../../api/api';\nimport { AppThunkType, GetAppStateType } from '../../App/store';\n\nconst initialState = [] as UsersResponseType[];\n\nexport const usersReducer = (state = initialState, action: UsersActionTypes): InitialStateType => {\n\tswitch (action.type) {\n\t\tcase userReducerActions.GET_ALL_USERS:\n\t\t\treturn [...action.params];\n\t\tcase userReducerActions.ADD_USER:\n\t\t\treturn [action.params, ...state];\n\t\tcase userReducerActions.UPDATE_USER:\n\t\t\treturn [...action.params];\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\n//AC\nconst userReducerActions = {\n\tGET_ALL_USERS: 'users/GET_ALL_USERS',\n\tADD_USER: 'users/ADD_USER',\n\tUPDATE_USER: 'users/UPDATE_USER'\n} as const;\nexport const getAllUsersAC = (params: UsersResponseType[]) => ({ type: userReducerActions.GET_ALL_USERS, params } as const);\nexport const addUserAC = (params: UsersResponseType) => ({ type: userReducerActions.ADD_USER, params } as const);\nexport const updateUserAC = (params: UsersResponseType[]) => ({ type: userReducerActions.UPDATE_USER, params } as const);\n\n\n//thunkC\nexport const getAllUsers =\n\t(): AppThunkType =>\n\t\tasync (dispatch: Dispatch) => {\n\t\t\tdispatch(setAppStatusAC('loading'));\n\t\t\ttry {\n\t\t\t\tconst response = await UserAPI.getAllUsers();\n\n\t\t\t\tdispatch(getAllUsersAC(response.data));\n\t\t\t\tdispatch(setAppStatusAC('succeeded'));\n\t\t\t} catch (e) {\n\t\t\t\tdispatch(setAppErrorAC('something went wrong, please try later'));\n\t\t\t\tconsole.log(e);\n\t\t\t} finally {\n\t\t\t\tdispatch(setAppStatusAC('idle'));\n\t\t\t}\n\t\t};\n\nexport const updateUser =\n\t(user: UserType): AppThunkType =>\n\t\tasync (dispatch: Dispatch, getState: GetAppStateType) => {\n\t\t\tdispatch(setAppStatusAC('loading'));\n\t\t\ttry {\n\t\t\t\tconst payload: UsersResponseType = {\n\t\t\t\t\tid: user.id,\n\t\t\t\t\tname: user.name,\n\t\t\t\t\tusername: user.username,\n\t\t\t\t\temail: user.email,\n\t\t\t\t\taddress: {\n\t\t\t\t\t\tstreet: user.street,\n\t\t\t\t\t\tsuite: user.suite,\n\t\t\t\t\t\tcity: user.city\n\t\t\t\t\t},\n\t\t\t\t\tphone: user.phone,\n\t\t\t\t\twebsite: user.website,\n\t\t\t\t\tcompany: {\n\t\t\t\t\t\tname: user.companyName,\n\t\t\t\t\t\tcatchPhrase: user.catchPhrase\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tconst response = await UserAPI.updateUser(payload);\n\t\t\t\tconst users = getState().users;\n\t\t\t\tconst updated = users.map(u => u.id === user.id ? { ...response.data } : u);\n\t\t\t\tdispatch(updateUserAC(updated));\n\t\t\t} catch (e) {\n\t\t\t\tdispatch(setAppErrorAC('something went wrong, please try later'));\n\t\t\t\tconsole.log(e);\n\t\t\t} finally {\n\t\t\t\tdispatch(setAppStatusAC('idle'));\n\t\t\t}\n\t\t};\n\nexport const addUser =\n\t(user: Omit<UserType, 'id'>): AppThunkType =>\n\t\tasync (dispatch: Dispatch) => {\n\t\t\tdispatch(setAppStatusAC('loading'));\n\t\t\ttry {\n\t\t\t\tconst payload: Omit<UsersResponseType, 'id'> = {\n\t\t\t\t\tname: user.name,\n\t\t\t\t\tusername: user.username,\n\t\t\t\t\temail: user.email,\n\t\t\t\t\taddress: {\n\t\t\t\t\t\tstreet: user.street,\n\t\t\t\t\t\tsuite: user.suite,\n\t\t\t\t\t\tcity: user.city\n\t\t\t\t\t},\n\t\t\t\t\tphone: user.phone,\n\t\t\t\t\twebsite: user.website,\n\t\t\t\t\tcompany: {\n\t\t\t\t\t\tname: user.companyName,\n\t\t\t\t\t\tcatchPhrase: user.catchPhrase\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tconst response = await UserAPI.addUser(payload);\n\t\t\t\tdispatch(addUserAC(response.data));\n\t\t\t\tdispatch(setAppStatusAC('succeeded'));\n\t\t\t} catch (e) {\n\t\t\t\tdispatch(setAppErrorAC('something went wrong, please try later'));\n\t\t\t\tconsole.log(e);\n\t\t\t} finally {\n\t\t\t\tdispatch(setAppStatusAC('idle'));\n\t\t\t}\n\t\t};\n\n//types\ntype InitialStateType = typeof initialState;\n\n\nexport type UserType = {\n\tid: number\n\tusername: string\n\tname: string\n\temail: string\n\tphone: string\n\twebsite: string\n\tcity: string\n\tstreet: string\n\tsuite: string\n\tcompanyName: string\n\tcatchPhrase: string\n};\n\nexport type UsersActionTypes =\n\t| ReturnType<typeof getAllUsersAC>\n\t| ReturnType<typeof addUserAC>\n\t| ReturnType<typeof updateUserAC>;\n\n\n","import { IconButton, TextField } from '@material-ui/core';\nimport { EditRounded, SaveRounded, CancelOutlined } from '@material-ui/icons';\nimport { useState, KeyboardEvent } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { UsersResponseType } from '../../../api/api';\nimport userPng from '../../../assets/user.png';\nimport { updateUser } from '../users-reducer';\nimport s from './User.module.css';\n\ntype UserPropsType = {\n\tuser: UsersResponseType\n\tisAdmin: boolean\n\teditUser: (id: number) => void\n};\n\nexport const User = (props: UserPropsType) => {\n\tconst dispatch = useDispatch();\n\tconst { user } = props;\n\tconst [editMode, setEditMode] = useState(false);\n\tconst [name, setName] = useState(user.name);\n\tconst [username, setUsername] = useState(user.username);\n\tconst [email, setEmail] = useState(user.email);\n\tconst [phone, setPhone] = useState(user.phone);\n\tconst [website, setWebsite] = useState(user.website);\n\tconst [city, setCity] = useState(user.address.city);\n\tconst [street, setStreet] = useState(user.address.street);\n\tconst [suite, setSuite] = useState(user.address.suite);\n\tconst [companyName, setCompanyName] = useState(user.company.name);\n\tconst [catchPhrase, setCatchPhrase] = useState(user.company.catchPhrase);\n\tconst [error, setError] = useState<string | null>('');\n\n\n\tconst validate = (arr: string[]) => {\n\t\tfor (let i = 0; arr.length > i; i++) {\n\t\t\tconst trimmed = arr[i].trim();\n\t\t\tif (trimmed.length < 100) {\n\t\t\t\tif (trimmed === '') {\n\t\t\t\t\tsetError('required');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsetError('max value is no more then 100');\n\t\t\t}\n\t\t}\n\t};\n\tconst onSave = () => {\n\t\tvalidate([name, username, email, phone, website, city, street, suite, companyName, catchPhrase]);\n\t\tif (error === null) {\n\t\t\tdispatch(updateUser({ id: user.id, name, username, email, phone, website, city, street, suite, companyName, catchPhrase }));\n\t\t\tsetEditMode(false);\n\t\t}\n\t};\n\tconst onCansel = () => {\n\t\tsetEditMode(false);\n\t\tsetName(user.name);\n\t\tsetUsername(user.username);\n\t\tsetEmail(user.email);\n\t\tsetPhone(user.phone);\n\t\tsetWebsite(user.website);\n\t\tsetCity(user.address.city);\n\t\tsetSuite(user.address.suite);\n\t\tsetCompanyName(user.company.name);\n\t\tsetCatchPhrase(user.company.catchPhrase);\n\t};\n\tconst onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\n\t\tif (error !== null) {\n\t\t\tsetError(null);\n\t\t}\n\t\tif (e.charCode === 13) {\n\t\t\tonSave();\n\t\t}\n\t};\n\treturn (\n\t\t<div className={s.wrapper}>\n\t\t\t<img className={s.picture} src={userPng} alt='' />\n\t\t\t{\n\t\t\t\teditMode\n\t\t\t\t\t? <div className={s.editIcon}>\n\t\t\t\t\t\t<div className={s.saveIcon}>\n\t\t\t\t\t\t\t<IconButton color={error ? 'secondary' : 'primary'} onClick={onSave}>\n\t\t\t\t\t\t\t\t<SaveRounded />\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<IconButton color='primary' onClick={onCansel}>\n\t\t\t\t\t\t\t<CancelOutlined />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</div >\n\t\t\t\t\t: <div className={s.editIcon} onClick={() => setEditMode(true)}>\n\t\t\t\t\t\t<IconButton color='primary'>\n\t\t\t\t\t\t\t<EditRounded />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</div >\n\n\t\t\t}\n\t\t\t<div className={s.info}>\n\t\t\t\t{editMode\n\t\t\t\t\t?\n\t\t\t\t\t<div className={s.inputs}>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tlabel={'name'}\n\t\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\t\tonChange={(e) => setName(e.currentTarget.value)}\n\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\tonKeyPress={onKeyPressHandler}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tlabel={'username'}\n\t\t\t\t\t\t\tvalue={username}\n\t\t\t\t\t\t\tonChange={(e) => setUsername(e.currentTarget.value)}\n\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\tonKeyPress={onKeyPressHandler}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tlabel={'email'}\n\t\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\t\tonChange={(e) => setEmail(e.currentTarget.value)}\n\t\t\t\t\t\t\tonKeyPress={onKeyPressHandler}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tlabel={'phone'}\n\t\t\t\t\t\t\tvalue={phone}\n\t\t\t\t\t\t\tonChange={(e) => setPhone(e.currentTarget.value)}\n\t\t\t\t\t\t\tonKeyPress={onKeyPressHandler}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tlabel={'website'}\n\t\t\t\t\t\t\tvalue={website}\n\t\t\t\t\t\t\tonChange={(e) => setWebsite(e.currentTarget.value)}\n\t\t\t\t\t\t\tonKeyPress={onKeyPressHandler}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tlabel={'city'}\n\t\t\t\t\t\t\tvalue={city}\n\t\t\t\t\t\t\tonChange={(e) => setCity(e.currentTarget.value)}\n\t\t\t\t\t\t\tonKeyPress={onKeyPressHandler}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tlabel={'street'}\n\t\t\t\t\t\t\tvalue={street}\n\t\t\t\t\t\t\tonChange={(e) => setStreet(e.currentTarget.value)}\n\t\t\t\t\t\t\tonKeyPress={onKeyPressHandler}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tlabel={'suite'}\n\t\t\t\t\t\t\tvalue={suite}\n\t\t\t\t\t\t\tonChange={(e) => setSuite(e.currentTarget.value)}\n\t\t\t\t\t\t\tonKeyPress={onKeyPressHandler}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tlabel={'companyName'}\n\t\t\t\t\t\t\tvalue={companyName}\n\t\t\t\t\t\t\tonChange={(e) => setCompanyName(e.currentTarget.value)}\n\t\t\t\t\t\t\tonKeyPress={onKeyPressHandler}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tlabel={'catchPhrase'}\n\t\t\t\t\t\t\tvalue={catchPhrase}\n\t\t\t\t\t\t\tonChange={(e) => setCatchPhrase(e.currentTarget.value)}\n\t\t\t\t\t\t\tonKeyPress={onKeyPressHandler}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t:\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div className={s.infoItem}>\n\t\t\t\t\t\t\t<div className={s.title}>Name: </div>{user.name}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={s.infoItem}>\n\t\t\t\t\t\t\t<div className={s.title}>UserName: </div>{user.username}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={s.infoItem}>\n\t\t\t\t\t\t\t<div className={s.title}>Email: </div>{user.email}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={s.infoItem}>\n\t\t\t\t\t\t\t<div className={s.title}>Phone: </div>{user.phone}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={s.infoItem}>\n\t\t\t\t\t\t\t<div className={s.title}>Website: </div>{user.website}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={s.infoItem}>\n\t\t\t\t\t\t\t<div className={s.title}>City: </div>{user.address.city}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={s.infoItem}>\n\t\t\t\t\t\t\t<div className={s.title}>Street: </div>{user.address.street}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={s.infoItem}>\n\t\t\t\t\t\t\t<div className={s.title}>Suite: </div>{user.address.suite}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={s.infoItem}>\n\t\t\t\t\t\t\t<div className={s.title}>Company name: </div>{user.company.name}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<div className={s.title}>Company catchPhrase: </div>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t{user.company.catchPhrase}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t</div>\n\t\t</div>\n\t);\n};","import { IconButton } from '@material-ui/core';\nimport { AddCircleOutline } from '@material-ui/icons';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { UsersResponseType } from '../../api/api';\nimport { AppStateType } from '../../App/store';\nimport { PATH } from '../../components/routes/Pages';\nimport { User } from './User/User';\n\nexport const Users = () => {\n\tconst users = useSelector<AppStateType, UsersResponseType[]>(state => state.users);\n\tconst isAdmin = useSelector<AppStateType, number>(state => state.login.loggedId);\n\tconst history = useHistory();\n\n\n\tconst routeChange = () => {\n\t\thistory.push(PATH.ADD_USER);\n\t};\n\tconst editUser = (id: number) => {\n\n\t};\n\treturn (\n\t\t<div>\n\t\t\t<h2 style={{ color: 'blue' }}>Users</h2>\n\t\t\t<IconButton onClick={routeChange} color='primary'>\n\t\t\t\t<AddCircleOutline /> add user\n\t\t\t</IconButton>\n\t\t\t{\n\t\t\t\tusers && users.map((u: UsersResponseType) => <User key={u.id} user={u} isAdmin={isAdmin === 1} editUser={editUser} />)\n\t\t\t}\n\t\t</div>\n\t);\n};\n\n","import { GetAppStateType } from './../../../App/store';\nimport { Dispatch } from 'redux';\nimport { setAppErrorAC } from '../../../App/app-reducer';\n\nconst initialState = {\n\tisLoggedIn: false,\n\tloggedId: 0,\n};\n\nexport const loginReducer = (\n\tstate: InitialStateType = initialState,\n\taction: LoginReducerActionTypes\n): InitialStateType => {\n\tswitch (action.type) {\n\t\tcase loginReducerActions.SET_IS_LOGGED_IN:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloggedId: action.id,\n\t\t\t\tisLoggedIn: action.value,\n\t\t\t};\n\t\tcase loginReducerActions.LOG_OUT:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisLoggedIn: false,\n\t\t\t\tloggedId: 0,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\n// AC\nconst loginReducerActions = {\n\tSET_IS_LOGGED_IN: 'login/SET_IS_LOGGED_IN',\n\tLOG_OUT: 'login/LOG_OUT',\n} as const;\n\nexport const setIsLoggedIn = (id: number, value: boolean) =>\n\t({ type: loginReducerActions.SET_IS_LOGGED_IN, id, value } as const);\n\nexport const logOut = () => ({ type: loginReducerActions.LOG_OUT } as const);\n\n\n//Thunks\nexport const LogIn =\n\t(email: string, password: string) =>\n\t\t(dispatch: Dispatch, getState: GetAppStateType) => {\n\t\t\tconst registeredUsers = getState().registration.registeredUsers;\n\t\t\tconst user = registeredUsers.find(\n\t\t\t\tu => u.email === email && u.password === password\n\t\t\t);\n\t\t\tif (user !== undefined) {\n\t\t\t\tdispatch(setIsLoggedIn(user.id, true));\n\t\t\t} else {\n\t\t\t\tdispatch(setAppErrorAC('Not currect email or password'));\n\t\t\t}\n\t\t};\n\n//types\ntype InitialStateType = typeof initialState;\n\nexport type LoginReducerActionTypes =\n\t| ReturnType<typeof setIsLoggedIn>\n\t| ReturnType<typeof logOut>;\n","import React from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AppStateType } from '../../App/store';\nimport { setAppErrorAC } from '../../App/app-reducer';\n\nfunction Alert(props: AlertProps) {\n\treturn <MuiAlert elevation={6} variant='filled' {...props} />;\n}\n\nexport function ErrorSnackbar() {\n\tconst error = useSelector<AppStateType, string | null>(state => state.app.error);\n\tconst dispatch = useDispatch();\n\n\tconst handleClose = (event?: React.SyntheticEvent, reason?: string) => {\n\t\tif (reason === 'clickaway') {\n\t\t\treturn;\n\t\t}\n\t\tdispatch(setAppErrorAC(null));\n\t};\n\n\n\tconst isOpen = error !== null;\n\n\treturn (\n\t\t<Snackbar open={isOpen} autoHideDuration={6000} onClose={handleClose}>\n\t\t\t<Alert onClose={handleClose} severity='error'>\n\t\t\t\t{error}\n\t\t\t</Alert>\n\t\t</Snackbar>\n\t);\n}\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AppStateType } from '../store';\nimport s from './Main.module.css';\nimport { AppBar, Button, IconButton, LinearProgress, Toolbar, Typography } from '@material-ui/core';\nimport { GroupWork } from '@material-ui/icons';\nimport { Users } from '../../features/users/Users';\nimport { getAllUsers } from '../../features/users/users-reducer';\nimport { AppStatusType } from '../app-reducer';\nimport { logOut } from '../../features/authorization/Login/loginReducer';\nimport { ErrorSnackbar } from '../../components/ErrorSnackbar/ErrorSnackbar';\n\n\nexport const Main = () => {\n\tconst isLoggedIn = useSelector<AppStateType, boolean>(state => state.login.isLoggedIn);\n\tconst status = useSelector<AppStateType, AppStatusType>(state => state.app.status);\n\n\tconst dispatch = useDispatch();\n\n\tconst logOutUser = () => {\n\t\tdispatch(logOut());\n\t};\n\tuseEffect(() => {\n\t\tdispatch(getAllUsers());\n\t}, [dispatch]);\n\n\n\treturn (\n\t\t<div className={s.wrapper}>\n\t\t\t<ErrorSnackbar />\n\t\t\t<div className={s.header}>\n\t\t\t\t<AppBar position='static'>\n\t\t\t\t\t<Toolbar className={s.header}>\n\t\t\t\t\t\t<IconButton edge='start' color='inherit' aria-label='menu'>\n\t\t\t\t\t\t\t<GroupWork />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t<Typography variant='h6' >\n\t\t\t\t\t\t\tAlemAgro\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t{isLoggedIn && <Button color='inherit' onClick={logOutUser}>Log out</Button>}\n\t\t\t\t\t</Toolbar>\n\t\t\t\t\t{status === 'loading' && <LinearProgress />}\n\t\t\t\t</AppBar>\n\t\t\t</div>\n\t\t\t<div className={s.container}>\n\t\t\t\t\t<Users />\n\t\t\t</div>\n\t\t</div>\n\n\t);\n};","import { useFormik } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink, Redirect } from 'react-router-dom';\nimport { AppStateType } from '../../../App/store';\nimport { LogIn } from './loginReducer';\nimport { PATH } from '../../../components/routes/Pages';\nimport s from './Login.module.css';\nimport { Button } from '@material-ui/core';\nimport FormControl from '@material-ui/core/FormControl/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel/FormLabel';\nimport FormGroup from '@material-ui/core/FormGroup/FormGroup';\nimport TextField from '@material-ui/core/TextField/TextField';\nimport { ErrorSnackbar } from '../../../components/ErrorSnackbar/ErrorSnackbar';\n\nexport const Login = () => {\n\tconst isLoggedIn = useSelector<AppStateType, boolean>(state => state.login.isLoggedIn);\n\tconst dispatch = useDispatch();\n\n\ttype FormErrorType = {\n\t\temail?: string\n\t\tpassword?: string\n\t};\n\tconst formik = useFormik({\n\t\tinitialValues: {\n\t\t\temail: '',\n\t\t\tpassword: '',\n\t\t},\n\t\tvalidate: (values) => {\n\t\t\tconst errors: FormErrorType = {};\n\t\t\tif (!values.email) {\n\t\t\t\terrors.email = 'Required';\n\t\t\t} else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n\t\t\t\terrors.email = 'Invalid email address';\n\t\t\t}\n\n\t\t\tif (!values.password) {\n\t\t\t\terrors.password = 'Required';\n\t\t\t} else if (values.password.length < 3) {\n\t\t\t\terrors.password = 'Must be 3 characters at least';\n\t\t\t}\n\t\t\treturn errors;\n\t\t},\n\t\tonSubmit: values => {\n\t\t\tconst { email, password } = values;\n\t\t\tformik.resetForm();\n\t\t\tdispatch(LogIn(email, password));\n\t\t},\n\t});\n\n\tif (isLoggedIn) {\n\t\treturn <Redirect to={PATH.MAIN} />;\n\t}\n\treturn <div className={s.wrapper}>\n\t\t<div className={s.bgrImg} />\n\t\t<ErrorSnackbar />\n\t\t<div className={s.form}>\n\t\t\t<form onSubmit={formik.handleSubmit}>\n\t\t\t\t<FormControl>\n\t\t\t\t\t<FormLabel>\n\t\t\t\t\t\t<p>To sign up click\n\t\t\t\t\t\t\t<NavLink to={PATH.REGISTER}><b> here</b></NavLink>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</FormLabel>\n\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tclassName={s.inputStyle}\n\t\t\t\t\t\t\tlabel='Email'\n\t\t\t\t\t\t\tmargin='normal'\n\t\t\t\t\t\t\t{...formik.getFieldProps('email')}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t<div className={s.errorStyle}>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tformik.touched.email && formik.errors.email\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\tlabel='Password'\n\t\t\t\t\t\t\tmargin='normal'\n\t\t\t\t\t\t\t{...formik.getFieldProps('password')}\n\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t<div className={s.errorStyle}>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tformik.touched.password && formik.errors.password\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t<Button type={'submit'} variant={'contained'} color={'primary'}>Login</Button>\n\t\t\t\t\t</FormGroup>\n\t\t\t\t</FormControl>\n\t\t\t</form>\n\t\t</div>\n\n\t</div>;\n};\n\n","import { Dispatch } from 'redux';\n\n\n\nconst initialState = {\n  registeredUsers: [\n    { id: 1, email: 'admin@gmail.com', password: 'admin7777' }\n  ] as RegisteredUserType[],\n};\n\nexport const registrationReducer = (\n  state: InitialStateType = initialState,\n  action: RegistrationActionTypes\n): InitialStateType => {\n  switch (action.type) {\n    case registrationReducerActions.ADD_REGISTERED_USER:\n      return {\n        ...state,\n        registeredUsers: [...state.registeredUsers, action.payload],\n      };\n    case registrationReducerActions.UPDATE_REGISTERED_USER:\n      return {\n        ...state,\n        registeredUsers: state.registeredUsers.map(u =>\n          u.id === action.payload.id ? { ...u, ...action.payload } : u\n        ),\n      };\n    default:\n      return state;\n  }\n};\n\n// AC\nconst registrationReducerActions = {\n  ADD_REGISTERED_USER: 'reg/ADD_REGISTERED_USER',\n  UPDATE_REGISTERED_USER: 'reg/UPDATE_REGISTERED_USER',\n} as const;\n\nexport const addRegisteredUser = (payload: RegisteredUserType) => {\n  return {\n    type: registrationReducerActions.ADD_REGISTERED_USER,\n    payload,\n  } as const;\n};\n\nexport const updateRegisteredUser = (\n  id: number,\n  firstName: string,\n  lastName: string,\n  email: string\n) => {\n  return {\n    type: registrationReducerActions.UPDATE_REGISTERED_USER,\n    payload: { id, firstName, lastName, email },\n  } as const;\n};\n\n//Thunks\nexport const addUser =\n  (email: string, password: string) =>\n    (dispatch: Dispatch) => {\n      const id = Date.now();\n      dispatch(addRegisteredUser({ id, email, password }));\n    };\n\n//types\ntype InitialStateType = typeof initialState;\n\nexport type RegistrationActionTypes =\n  | ReturnType<typeof addRegisteredUser>\n  | ReturnType<typeof updateRegisteredUser>;\n\nexport type RegisteredUserType = {\n  id: number\n  email: string\n  password: string\n};\n","import { useState } from 'react';\nimport { useFormik } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink, Redirect } from 'react-router-dom';\nimport { AppStateType } from '../../../App/store';\nimport { addUser, RegisteredUserType } from './registReducer';\nimport FormControl from '@material-ui/core/FormControl/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup/FormGroup';\nimport Button from '@material-ui/core/Button/Button';\nimport TextField from '@material-ui/core/TextField/TextField';\nimport s from './Registration.module.css';\nimport { PATH } from '../../../components/routes/Pages';\nimport { FormLabel } from '@material-ui/core';\n\nexport const Registration = () => {\n\tconst registeredUsers = useSelector<AppStateType, RegisteredUserType[]>(state => state.registration.registeredUsers);\n\tconst [editMode, setEditMode] = useState(false);\n\tconst dispatch = useDispatch();\n\n\ttype FormErrorType = {\n\t\temail?: string\n\t\tpassword?: string\n\t\tpasswordCheck?: string\n\t};\n\tconst formik = useFormik({\n\t\tinitialValues: {\n\t\t\temail: '',\n\t\t\tpassword: '',\n\t\t\tpasswordCheck: ''\n\t\t},\n\t\tvalidate: (values) => {\n\t\t\tconst errors: FormErrorType = {};\n\t\t\tconst checkEmail = registeredUsers.find(u => u.email === values.email);\n\t\t\tif (!values.email) {\n\t\t\t\terrors.email = 'required';\n\t\t\t} else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n\t\t\t\terrors.email = 'not valid email';\n\t\t\t} else if (checkEmail !== undefined) {\n\t\t\t\terrors.email = 'this email is already in use';\n\t\t\t}\n\t\t\tif (!values.password) {\n\t\t\t\terrors.password = 'required';\n\t\t\t} else if (values.password.length < 7) {\n\t\t\t\terrors.password = 'needs to be more then 7';\n\t\t\t}\n\t\t\tif (values.password !== values.passwordCheck) {\n\t\t\t\terrors.passwordCheck = 'passwords do not match';\n\t\t\t}\n\t\t\treturn errors;\n\t\t},\n\t\tonSubmit: values => {\n\t\t\tconst { email, password, } = values;\n\t\t\tformik.resetForm();\n\t\t\tdispatch(addUser(email, password));\n\t\t\tsetEditMode(true);\n\t\t},\n\t});\n\n\tif (editMode) {\n\t\treturn <Redirect to={'/'} />;\n\t}\n\treturn <div className={s.wrapper} >\n\t\t<div className={s.bgrImg} />\n\t\t<form onSubmit={formik.handleSubmit}>\n\t\t\t<FormControl >\n\t\t\t\t<FormLabel>\n\t\t\t\t\t<p>To login click\n\t\t\t\t\t\t<NavLink to={PATH.LOGIN}><b> here</b></NavLink>\n\t\t\t\t\t</p>\n\t\t\t\t</FormLabel>\n\t\t\t\t<FormGroup>\n\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tlabel='email'\n\t\t\t\t\t\tmargin='normal'\n\t\t\t\t\t\t{...formik.getFieldProps('email')}\n\t\t\t\t\t/>\n\t\t\t\t\t{\n\t\t\t\t\t\t<div className={s.errorStyle}>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tformik.touched.email && formik.errors.email\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t\t<TextField\n\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\tlabel='password'\n\t\t\t\t\t\tmargin='normal'\n\t\t\t\t\t\t{...formik.getFieldProps('password')}\n\n\t\t\t\t\t/>\n\t\t\t\t\t{\n\t\t\t\t\t\t<div className={s.errorStyle}>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tformik.touched.password && formik.errors.password\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t\t<TextField\n\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\tlabel='password'\n\t\t\t\t\t\tmargin='normal'\n\t\t\t\t\t\t{...formik.getFieldProps('passwordCheck')}\n\n\t\t\t\t\t/>\n\t\t\t\t\t{\n\t\t\t\t\t\t<div className={s.errorStyle}>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tformik.touched.passwordCheck && formik.errors.passwordCheck\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t\t<Button type={'submit'} variant={'contained'} color={'primary'}>sign up</Button>\n\t\t\t\t</FormGroup>\n\t\t\t</FormControl>\n\t\t</form>\n\t</div>;\n};\n","import { useFormik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport FormControl from '@material-ui/core/FormControl/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup/FormGroup';\nimport Button from '@material-ui/core/Button/Button';\nimport TextField from '@material-ui/core/TextField/TextField';\nimport s from './AddUser.module.css';\nimport { addUser } from '../users-reducer';\nimport { useHistory } from 'react-router-dom';\nimport { IconButton } from '@material-ui/core';\nimport { CancelOutlined } from '@material-ui/icons';\n\nexport const AddUser = () => {\n\tconst dispatch = useDispatch();\n\tconst history = useHistory();\n\ttype FormErrorType = {\n\t\tname?: string,\n\t\tusername?: string,\n\t\temail?: string,\n\t\tstreet?: string,\n\t\tsuite?: string,\n\t\tcity?: string,\n\t\tphone?: string,\n\t\twebsite?: string,\n\t\tcompanyName?: string,\n\t\tcatchPhrase?: string,\n\t};\n\tconst formik = useFormik({\n\t\tinitialValues: {\n\t\t\tname: '',\n\t\t\tusername: '',\n\t\t\temail: '',\n\t\t\tstreet: '',\n\t\t\tsuite: '',\n\t\t\tcity: '',\n\t\t\tphone: '',\n\t\t\twebsite: '',\n\t\t\tcompanyName: '',\n\t\t\tcatchPhrase: '',\n\t\t},\n\t\tvalidate: (values) => {\n\t\t\tconst errors: FormErrorType = {};\n\t\t\tconst { name, username, email, street, suite, city, phone, website, companyName, catchPhrase } = values;\n\t\t\tif (!name) {\n\t\t\t\terrors.name = 'required';\n\t\t\t} else if (!username) {\n\t\t\t\terrors.username = 'required';\n\t\t\t} else if (!email) {\n\t\t\t\terrors.email = 'required';\n\t\t\t} else if (!street) {\n\t\t\t\terrors.street = 'required';\n\t\t\t} else if (!suite) {\n\t\t\t\terrors.suite = 'required';\n\t\t\t} else if (!city) {\n\t\t\t\terrors.city = 'required';\n\t\t\t} else if (!phone) {\n\t\t\t\terrors.phone = 'required';\n\t\t\t} else if (!website) {\n\t\t\t\terrors.website = 'required';\n\t\t\t} else if (!companyName) {\n\t\t\t\terrors.companyName = 'required';\n\t\t\t} else if (!catchPhrase) {\n\t\t\t\terrors.catchPhrase = 'required';\n\t\t\t}\n\t\t\treturn errors;\n\t\t},\n\t\tonSubmit: values => {\n\t\t\tformik.resetForm();\n\t\t\tdispatch(addUser(values));\n\t\t\tgoBack();\n\t\t},\n\t});\n\tconst goBack = () => {\n\t\thistory.goBack();\n\t};\n\treturn <div className={s.wrapper}>\n\t\t<div className={s.content}>\n\t\t\t<IconButton className={s.cancelBtn} onClick={goBack} color='primary'>\n\t\t\t\t<CancelOutlined />\n\t\t\t</IconButton>\n\t\t\t<form onSubmit={formik.handleSubmit}>\n\t\t\t\t<FormControl >\n\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t<div className={s.form}>\n\t\t\t\t\t\t\t<div className={s.left}>\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tlabel='name'\n\t\t\t\t\t\t\t\t\tmargin='normal'\n\t\t\t\t\t\t\t\t\t{...formik.getFieldProps('name')}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t<div className={s.errorStyle}>\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tformik.touched.name && formik.errors.name\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tlabel='username'\n\t\t\t\t\t\t\t\t\tmargin='normal'\n\t\t\t\t\t\t\t\t\t{...formik.getFieldProps('username')}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t<div className={s.errorStyle}>\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tformik.touched.username && formik.errors.username\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tlabel='email'\n\t\t\t\t\t\t\t\t\tmargin='normal'\n\t\t\t\t\t\t\t\t\t{...formik.getFieldProps('email')}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t<div className={s.errorStyle}>\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tformik.touched.email && formik.errors.email\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tlabel='street'\n\t\t\t\t\t\t\t\t\tmargin='normal'\n\t\t\t\t\t\t\t\t\t{...formik.getFieldProps('street')}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t<div className={s.errorStyle}>\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tformik.touched.street && formik.errors.street\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tlabel='suite'\n\t\t\t\t\t\t\t\t\tmargin='normal'\n\t\t\t\t\t\t\t\t\t{...formik.getFieldProps('suite')}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t<div className={s.errorStyle}>\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tformik.touched.suite && formik.errors.suite\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</div >\n\t\t\t\t\t\t\t<div className={s.right}>\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tlabel='city'\n\t\t\t\t\t\t\t\t\tmargin='normal'\n\t\t\t\t\t\t\t\t\t{...formik.getFieldProps('city')}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t<div className={s.errorStyle}>\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tformik.touched.city && formik.errors.city\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tlabel='phone'\n\t\t\t\t\t\t\t\t\tmargin='normal'\n\t\t\t\t\t\t\t\t\t{...formik.getFieldProps('phone')}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t<div className={s.errorStyle}>\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tformik.touched.phone && formik.errors.phone\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tlabel='website'\n\t\t\t\t\t\t\t\t\tmargin='normal'\n\t\t\t\t\t\t\t\t\t{...formik.getFieldProps('website')}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t<div className={s.errorStyle}>\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tformik.touched.website && formik.errors.website\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tlabel='companyName'\n\t\t\t\t\t\t\t\t\tmargin='normal'\n\t\t\t\t\t\t\t\t\t{...formik.getFieldProps('companyName')}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t<div className={s.errorStyle}>\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tformik.touched.companyName && formik.errors.companyName\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tlabel='catchPhrase'\n\t\t\t\t\t\t\t\t\tmargin='normal'\n\t\t\t\t\t\t\t\t\t{...formik.getFieldProps('catchPhrase')}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t<div className={s.errorStyle}>\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tformik.touched.catchPhrase && formik.errors.catchPhrase\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Button type={'submit'} variant={'contained'} color={'primary'}>add</Button>\n\t\t\t\t\t</FormGroup>\n\t\t\t\t</FormControl>\n\t\t\t</form>\n\t\t</div>\n\t</div>;\n};\n","import React, { DetailedHTMLProps, HTMLAttributes } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { AppStateType } from '../../App/store';\nimport { PATH } from '../routes/Pages';\n\ntype DivPropsType = DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>;\n\ntype AuthRedirectPropsType = DivPropsType & {};\n\nexport const AuthRedirect: React.FC<AuthRedirectPropsType> = React.memo(({\n\tchildren,\n\t...restProps\n}) => {\n\tconst isLoggedIn = useSelector<AppStateType, boolean>(state => state.login.isLoggedIn);\n\n\tif (!isLoggedIn) {\n\t\treturn <Redirect to={PATH.LOGIN} />;\n\t}\n\treturn (\n\t\t<>\n\t\t\t<div {...restProps}>\n\t\t\t\t{children}\n\t\t\t</div>\n\t\t</>\n\t);\n});","import { ReactNode } from 'react';\nimport { Main } from '../../App/Main/Main';\nimport { Login } from '../../features/authorization/Login/Login';\nimport { Registration } from '../../features/authorization/Registration/Registration';\nimport { AddUser } from '../../features/users/AddUser/AddUser';\nimport { AuthRedirect } from '../Redirect/AuthRedirect';\n\n\nexport type PageType = {\n\t_id: number;\n\ttitle: string;\n\tpath?: string;\n\tparams?: string;\n\texact?: boolean;\n\tpage: ReactNode;\n};\n\nexport const PATH = {\n\tLOGIN: '/login',\n\tREGISTER: '/register',\n\tMAIN: '/',\n\tADD_USER: '/addUser'\n};\n\nexport const pages: PageType[] = [\n\t{\n\t\t_id: 0, title: 'main', path: '/', exact: true,\n\t\tpage: <AuthRedirect> <Main /> </AuthRedirect>\n\t},\n\t{ _id: 1, title: 'login', path: PATH.LOGIN, exact: true, page: <Login /> },\n\t{ _id: 2, title: 'register', path: PATH.REGISTER, exact: true, page: <Registration /> },\n\t{ \n\t\t_id: 3, title: 'addUser', path: PATH.ADD_USER, exact: true, \n\t\tpage: <AuthRedirect> <AddUser /> </AuthRedirect>\n\t},\n\t{ _id: 777, title: 'error404', page: <div>error404</div> }\n];\n","import { Switch, Route } from 'react-router-dom';\nimport { PageType, pages } from './Pages';\n\nconst mappedRoutes = pages.map((p: PageType) => (\n\t<Route\n\t\tkey={'route-' + p._id}\n\t\tpath={p.path && (p.path + (p.params || ''))}\n\t\texact={p.exact}\n\t\trender={() => p.page}\n\t/>\n));\n\nconst Routes = () => {\n\n\treturn (\n\t\t<Switch>\n\t\t\t{mappedRoutes}\n\t\t</Switch>\n\t);\n};\n\nexport default Routes;\n","import './App.css';\nimport Routes from '../components/routes/Routes';\nimport { Helmet } from 'react-helmet';\nfunction App() {\n\treturn (\n\t\t<div className='App'>\n\t\t\t<Helmet>\n\t\t\t\t<meta charSet='utf-8' />\n\t\t\t\t<title>AlemAgro-uniting the best!</title>\n\t\t\t\t<meta name='description' content='AlemAgro client app' />\n\t\t\t</Helmet>\n\t\t\t<Routes />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n\timport('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n\t\tgetCLS(onPerfEntry);\n\t\tgetFID(onPerfEntry);\n\t\tgetFCP(onPerfEntry);\n\t\tgetLCP(onPerfEntry);\n\t\tgetTTFB(onPerfEntry);\n\t});\n  }\n};\n\nexport default reportWebVitals;\n","import {\n  registrationReducer,\n  RegistrationActionTypes,\n} from './../features/authorization/Registration/registReducer';\nimport { applyMiddleware, combineReducers, compose, createStore } from 'redux';\nimport { ThunkAction } from 'redux-thunk';\nimport thunk from 'redux-thunk';\nimport { loginReducer } from '../features/authorization/Login/loginReducer';\nimport { UsersActionTypes, usersReducer } from '../features/users/users-reducer';\nimport { AppActionTypes, appReducer } from './app-reducer';\n\n\nconst rootReducer = combineReducers({\n  app: appReducer,\n  login: loginReducer,\n  registration: registrationReducer,\n  users: usersReducer\n});\n\nexport type StoreType = typeof store;\n\ntype RootReducerType = typeof rootReducer;\n\nexport type AppStateType = ReturnType<RootReducerType>;\nexport type GetAppStateType = () => AppStateType;\n\nexport type AppActionsType =\n  | RegistrationActionTypes | UsersActionTypes | AppActionTypes;\n\nexport type AppThunkType<ReturnType = void> = ThunkAction<\n  ReturnType,\n  AppStateType,\n  unknown,\n  AppActionsType\n>;\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nexport const store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './App/store';\n\nReactDOM.render(\n  <HashRouter>\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t<App />\n\t\t</Provider>\n\t</React.StrictMode>\n  </HashRouter>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"AddUser_wrapper__2l2si\",\"form\":\"AddUser_form__1d_MO\",\"left\":\"AddUser_left__3Lseq\",\"content\":\"AddUser_content__3Y_oM\",\"cancelBtn\":\"AddUser_cancelBtn__3fgS8\",\"errorStyle\":\"AddUser_errorStyle__3WwZb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Login_wrapper__3wqJ_\",\"bgrImg\":\"Login_bgrImg__r7fQL\",\"inputStyle\":\"Login_inputStyle__36ZuG\",\"errorStyle\":\"Login_errorStyle__3wgQX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Registration_wrapper__2_CXD\",\"bgrImg\":\"Registration_bgrImg__27QJJ\",\"errorStyle\":\"Registration_errorStyle__3H8iK\",\"textField\":\"Registration_textField__1qN6-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Main_wrapper__3rmd_\",\"container\":\"Main_container__33U9l\",\"header\":\"Main_header__24DAZ\",\"title\":\"Main_title__2Ad1Q\"};"],"sourceRoot":""}
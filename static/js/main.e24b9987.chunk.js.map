{"version":3,"sources":["features/users/User/User.module.css","App/app-reducer.ts","api/api.ts","features/users/users-reducer.ts","features/users/User/User.tsx","features/users/Users.tsx","features/authorization/Login/loginReducer.ts","components/ErrorSnackbar/ErrorSnackbar.tsx","App/Main/Main.tsx","features/authorization/Login/Login.tsx","features/authorization/Registration/registReducer.ts","features/authorization/Registration/Registration.tsx","features/users/AddUser/AddUser.tsx","components/Redirect/AuthRedirect.tsx","components/routes/Pages.tsx","components/routes/Routes.tsx","App/App.tsx","App/store.ts","index.tsx","features/users/AddUser/AddUser.module.css","features/authorization/Login/Login.module.css","features/authorization/Registration/Registration.module.css","App/Main/Main.module.css","features/users/users.module.css"],"names":["module","exports","initialState","status","error","appReducerActions","IS_INITIALIZED","SET_VALIDATION","setAppStatusAC","type","setAppErrorAC","instance","axios","create","baseURL","UserAPI","get","payload","post","id","put","userReducerActions","GET_ALL_USERS","ADD_USER","UPDATE_USER","DELETE_USER","deleteUserAC","User","props","dispatch","useDispatch","useState","editMode","setEditMode","name","setName","email","setEmail","phone","setPhone","website","setWebsite","city","setCity","street","setStreet","suite","setSuite","companyName","setCompanyName","setError","onSave","user","arr","i","length","trimmed","trim","validate","catchPhrase","username","getState","a","address","company","response","users","updated","map","u","data","params","console","log","onDelete","onKeyPressHandler","e","charCode","className","s","wrapper","borderLine","TextField","label","value","onChange","currentTarget","autoFocus","onKeyPress","IconButton","color","onClick","SaveRounded","isAdmin","DeleteRounded","dontShow","EditRounded","Users","useSelector","state","loggedId","login","history","useHistory","push","PATH","AddCircleOutline","tableContainer","tableHeader","t","tableBody","item","isLoggedIn","loginReducerActions","SET_IS_LOGGED_IN","LOG_OUT","LogIn","password","registration","registeredUsers","find","undefined","Alert","elevation","variant","ErrorSnackbar","app","handleClose","event","reason","isOpen","Snackbar","open","autoHideDuration","onClose","severity","Main","useEffect","header","AppBar","position","Toolbar","edge","aria-label","GroupWork","Typography","Button","LinearProgress","container","Login","formik","useFormik","initialValues","values","errors","test","onSubmit","resetForm","to","MAIN","bgrImg","form","handleSubmit","REGISTER","inputStyle","margin","getFieldProps","errorStyle","touched","registrationReducerActions","ADD_REGISTERED_USER","UPDATE_REGISTERED_USER","addUser","Date","now","Registration","passwordCheck","checkEmail","LOGIN","AddUser","goBack","content","cancelBtn","CancelOutlined","left","right","AuthRedirect","React","memo","children","restProps","mappedRoutes","_id","title","path","exact","page","p","render","Routes","App","Helmet","charSet","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e24b9987.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"borderLine\":\"User_borderLine__3weOQ\",\"dontShow\":\"User_dontShow__NPK7f\"};","const initialState = {\n  status: 'idle' as AppStatusType,\n  error: null as string | null\n};\n\nexport const appReducer = (state: InitialStateType = initialState, action: AppActionTypes): InitialStateType => {\n  switch (action.type) {\n    case appReducerActions.IS_INITIALIZED:\n      return { ...state, status: action.status };\n    case appReducerActions.SET_VALIDATION:\n      return { ...state, error: action.error };\n    default:\n      return state;\n  }\n};\n\n//AC\nconst appReducerActions = {\n  IS_INITIALIZED: 'app/IS_INITIALIZED',\n  SET_VALIDATION: 'app/SET_VALIDATION',\n} as const;\nexport const setAppStatusAC = (status: AppStatusType) =>\n({\n  type: appReducerActions.IS_INITIALIZED,\n  status,\n} as const);\n\nexport const setAppErrorAC = (error: string | null) =>\n  ({ type: appReducerActions.SET_VALIDATION, error } as const);\n\n//types\ntype InitialStateType = typeof initialState;\nexport type AppActionTypes = IsInitializedType;\nexport type SetAppStatusAT = ReturnType<typeof setAppStatusAC>;\nexport type SetAppErrorAT = ReturnType<typeof setAppErrorAC>;\n\nexport type IsInitializedType = SetAppStatusAT | SetAppErrorAT;\n\nexport type AppStatusType = 'idle' | 'loading' | 'succeeded' | 'failed';\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://jsonplaceholder.typicode.com/',\n});\n\n//API\nexport const UserAPI = {\n  getAllUsers() {\n    return instance.get<UsersResponseType[]>('users');\n  },\n  addUser(payload: Omit<UsersResponseType, 'id'>) {\n    return instance.post<UsersResponseType>('users', payload);\n  },\n  updateUser(payload: UsersResponseType) {\n    const id = payload.id;\n    return instance.put<UsersResponseType>(`users/${id}`, payload);\n  },\n  deleteUser(id: number) {\n    return instance.delete<UsersResponseType[]>(`users/${id}`);\n  },\n};\n\n\n\n\n//TYPES\nexport type UsersResponseType = {\n  id: number,\n  name: string,\n  username: string,\n  email: string,\n  address: {\n    street: string,\n    suite: string,\n    city: string,\n    zipcode?: number,\n    geo?: {\n      lat: number,\n      lng: number\n    }\n  },\n  phone: string,\n  website: string,\n  company: {\n    name: string,\n    catchPhrase: string,\n    bs?: string\n  }\n};\n","import { setAppErrorAC, setAppStatusAC } from './../../App/app-reducer';\nimport { Dispatch } from 'redux';\nimport { UserAPI, UsersResponseType } from '../../api/api';\nimport { AppThunkType, GetAppStateType } from '../../App/store';\n\nconst initialState = [] as UsersResponseType[];\n\nexport const usersReducer = (state = initialState, action: UsersActionTypes): InitialStateType => {\n\tswitch (action.type) {\n\t\tcase userReducerActions.GET_ALL_USERS:\n\t\t\treturn [...action.params];\n\t\tcase userReducerActions.ADD_USER:\n\t\t\treturn [...state, action.params];\n\t\tcase userReducerActions.UPDATE_USER:\n\t\t\treturn [...action.params];\n\t\tcase userReducerActions.DELETE_USER:\n\t\t\treturn state.filter(u => u.id !== action.id);\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\n//AC\nconst userReducerActions = {\n\tGET_ALL_USERS: 'users/GET_ALL_USERS',\n\tADD_USER: 'users/ADD_USER',\n\tUPDATE_USER: 'users/UPDATE_USER',\n\tDELETE_USER: 'users/DELETE_USER'\n} as const;\nexport const getAllUsersAC = (params: UsersResponseType[]) => ({ type: userReducerActions.GET_ALL_USERS, params } as const);\nexport const addUserAC = (params: UsersResponseType) => ({ type: userReducerActions.ADD_USER, params } as const);\nexport const updateUserAC = (params: UsersResponseType[]) => ({ type: userReducerActions.UPDATE_USER, params } as const);\nexport const deleteUserAC = (id: number) => ({ type: userReducerActions.DELETE_USER, id } as const);\n\n\n//thunkC\nexport const getAllUsers =\n\t(): AppThunkType =>\n\t\tasync (dispatch: Dispatch) => {\n\t\t\t\n\t\t\tdispatch(setAppStatusAC('loading'));\n\t\t\ttry {\n\t\t\t\tconst response = await UserAPI.getAllUsers();\n\n\t\t\t\tdispatch(getAllUsersAC(response.data));\n\t\t\t\tdispatch(setAppStatusAC('succeeded'));\n\t\t\t} catch (e) {\n\t\t\t\tdispatch(setAppErrorAC('something went wrong, please try later'));\n\t\t\t\tconsole.log(e);\n\t\t\t} finally {\n\t\t\t\tdispatch(setAppStatusAC('idle'));\n\t\t\t}\n\t\t};\n\nexport const updateUser =\n\t(user: UserType): AppThunkType =>\n\t\tasync (dispatch: Dispatch, getState: GetAppStateType) => {\n\t\t\tdispatch(setAppStatusAC('loading'));\n\t\t\ttry {\n\t\t\t\tconst payload: UsersResponseType = {\n\t\t\t\t\tid: user.id,\n\t\t\t\t\tname: user.name,\n\t\t\t\t\tusername: user.username,\n\t\t\t\t\temail: user.email,\n\t\t\t\t\taddress: {\n\t\t\t\t\t\tstreet: user.street,\n\t\t\t\t\t\tsuite: user.suite,\n\t\t\t\t\t\tcity: user.city\n\t\t\t\t\t},\n\t\t\t\t\tphone: user.phone,\n\t\t\t\t\twebsite: user.website,\n\t\t\t\t\tcompany: {\n\t\t\t\t\t\tname: user.companyName,\n\t\t\t\t\t\tcatchPhrase: user.catchPhrase\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tconst response = await UserAPI.updateUser(payload);\n\t\t\t\tconst users = getState().users;\n\t\t\t\tconst updated = users.map(u => u.id === user.id ? { ...response.data } : u);\n\t\t\t\tdispatch(updateUserAC(updated));\n\t\t\t} catch (e) {\n\t\t\t\tdispatch(setAppErrorAC('something went wrong, please try later'));\n\t\t\t\tconsole.log(e);\n\t\t\t} finally {\n\t\t\t\tdispatch(setAppStatusAC('idle'));\n\t\t\t}\n\t\t};\n\nexport const addUser =\n\t(user: Omit<UserType, 'id'>): AppThunkType =>\n\t\tasync (dispatch: Dispatch) => {\n\t\t\tdispatch(setAppStatusAC('loading'));\n\t\t\ttry {\n\t\t\t\tconst payload: Omit<UsersResponseType, 'id'> = {\n\t\t\t\t\tname: user.name,\n\t\t\t\t\tusername: user.username,\n\t\t\t\t\temail: user.email,\n\t\t\t\t\taddress: {\n\t\t\t\t\t\tstreet: user.street,\n\t\t\t\t\t\tsuite: user.suite,\n\t\t\t\t\t\tcity: user.city\n\t\t\t\t\t},\n\t\t\t\t\tphone: user.phone,\n\t\t\t\t\twebsite: user.website,\n\t\t\t\t\tcompany: {\n\t\t\t\t\t\tname: user.companyName,\n\t\t\t\t\t\tcatchPhrase: user.catchPhrase\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tconst response = await UserAPI.addUser(payload);\n\t\t\t\tdispatch(addUserAC(response.data));\n\t\t\t\tdispatch(setAppStatusAC('succeeded'));\n\t\t\t} catch (e) {\n\t\t\t\tdispatch(setAppErrorAC('something went wrong, please try later'));\n\t\t\t\tconsole.log(e);\n\t\t\t} finally {\n\t\t\t\tdispatch(setAppStatusAC('idle'));\n\t\t\t}\n\t\t};\n\nexport const deleteUser =\n\t(id: number): AppThunkType =>\n\t\tasync (dispatch: Dispatch) => {\n\t\t\tdispatch(setAppStatusAC('loading'));\n\t\t\ttry {\n\t\t\t\tconst response = await UserAPI.deleteUser(id);\n\t\t\t\tdispatch(deleteUserAC(id));\n\t\t\t\tdispatch(setAppStatusAC('succeeded'));\n\t\t\t} catch (e) {\n\t\t\t\tdispatch(setAppErrorAC('something went wrong, please try later'));\n\t\t\t\tconsole.log(e);\n\t\t\t} finally {\n\t\t\t\tdispatch(setAppStatusAC('idle'));\n\t\t\t}\n\t\t};\n//types\ntype InitialStateType = typeof initialState;\n\n\nexport type UserType = {\n\tid: number\n\tusername: string\n\tname: string\n\temail: string\n\tphone: string\n\twebsite: string\n\tcity: string\n\tstreet: string\n\tsuite: string\n\tcompanyName: string\n\tcatchPhrase: string\n};\n\nexport type UsersActionTypes =\n\t| ReturnType<typeof getAllUsersAC>\n\t| ReturnType<typeof addUserAC>\n\t| ReturnType<typeof updateUserAC>\n\t| ReturnType<typeof deleteUserAC>\n\n\n","import { IconButton, TextField } from '@material-ui/core';\nimport { EditRounded, SaveRounded, DeleteRounded } from '@material-ui/icons';\nimport { useState, KeyboardEvent } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { deleteUserAC, updateUser } from '../users-reducer';\nimport s from './User.module.css';\n\ntype UserPropsType = {\n\tid: number\n\tname: string\n\temail: string\n\tphone: string\n\twebsite: string\n\tcity: string\n\tstreet: string\n\tsuite: string\n\tcompanyName: string\n\tisAdmin: boolean\n};\n\nexport const User = (props: UserPropsType) => {\n\tconst dispatch = useDispatch();\n\tconst [editMode, setEditMode] = useState(false);\n\tconst [name, setName] = useState(props.name);\n\tconst [email, setEmail] = useState(props.email);\n\tconst [phone, setPhone] = useState(props.phone);\n\tconst [website, setWebsite] = useState(props.website);\n\tconst [city, setCity] = useState(props.city);\n\tconst [street, setStreet] = useState(props.street);\n\tconst [suite, setSuite] = useState(props.suite);\n\tconst [companyName, setCompanyName] = useState(props.companyName);\n\tconst [error, setError] = useState<string | null>('');\n\n\n\tconst validate = (arr: string[]) => {\n\t\tfor (let i = 0; arr.length > i; i++) {\n\t\t\tconst trimmed = arr[i].trim();\n\t\t\tif (trimmed.length < 100) {\n\t\t\t\tif (trimmed === '') {\n\t\t\t\t\tsetError('required');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsetError('max value is no more then 100');\n\t\t\t}\n\t\t}\n\t};\n\tconst onSave = () => {\n\t\tvalidate([name, email, phone, website, city, street, suite, companyName]);\n\t\tif (error === null) {\n\t\t\tdispatch(updateUser({ id: props.id, name, email, phone, website, city, street, suite, companyName, catchPhrase: '', username: '' }));\n\t\t\tsetEditMode(false);\n\t\t}\n\t};\n\tconst onDelete = () => {\n\t\tdispatch(deleteUserAC(props.id))\n\t};\n\tconst onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\n\t\tif (error !== null) {\n\t\t\tsetError(null);\n\t\t}\n\t\tif (e.charCode === 13) {\n\t\t\tonSave();\n\t\t}\n\t};\n\treturn (\n\t\t<tr className={s.wrapper}>\n\t\t\t{editMode\n\t\t\t\t?\n\t\t\t\t<>\n\t\t\t\t\t<td className={s.borderLine}>\n\t\t\t\t\t\t{props.id}\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tlabel={'name'}\n\t\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\t\tonChange={(e) => setName(e.currentTarget.value)}\n\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\tonKeyPress={onKeyPressHandler}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tlabel={'email'}\n\t\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\t\tonChange={(e) => setEmail(e.currentTarget.value)}\n\t\t\t\t\t\t\tonKeyPress={onKeyPressHandler}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tlabel={'phone'}\n\t\t\t\t\t\t\tvalue={phone}\n\t\t\t\t\t\t\tonChange={(e) => setPhone(e.currentTarget.value)}\n\t\t\t\t\t\t\tonKeyPress={onKeyPressHandler}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</td>\n\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tlabel={'website'}\n\t\t\t\t\t\t\tvalue={website}\n\t\t\t\t\t\t\tonChange={(e) => setWebsite(e.currentTarget.value)}\n\t\t\t\t\t\t\tonKeyPress={onKeyPressHandler}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tlabel={'city'}\n\t\t\t\t\t\t\tvalue={city}\n\t\t\t\t\t\t\tonChange={(e) => setCity(e.currentTarget.value)}\n\t\t\t\t\t\t\tonKeyPress={onKeyPressHandler}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tlabel={'street'}\n\t\t\t\t\t\t\tvalue={street}\n\t\t\t\t\t\t\tonChange={(e) => setStreet(e.currentTarget.value)}\n\t\t\t\t\t\t\tonKeyPress={onKeyPressHandler}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tlabel={'suite'}\n\t\t\t\t\t\t\tvalue={suite}\n\t\t\t\t\t\t\tonChange={(e) => setSuite(e.currentTarget.value)}\n\t\t\t\t\t\t\tonKeyPress={onKeyPressHandler}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tlabel={'companyName'}\n\t\t\t\t\t\t\tvalue={companyName}\n\t\t\t\t\t\t\tonChange={(e) => setCompanyName(e.currentTarget.value)}\n\t\t\t\t\t\t\tonKeyPress={onKeyPressHandler}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<IconButton color={error ? 'secondary' : 'primary'} onClick={onSave}>\n\t\t\t\t\t\t\t\t<SaveRounded />\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</td>\n\t\t\t\t\t{\n\t\t\t\t\t\t!props.isAdmin && (\n\t\t\t\t\t\t\t<td className={s.borderLine}>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<IconButton color={error ? 'secondary' : 'primary'} onClick={onSave}>\n\t\t\t\t\t\t\t\t\t\t<SaveRounded />\n\t\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\n\t\t\t\t\t<td className={s.borderLine}>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<IconButton color={error ? 'secondary' : 'primary'} onClick={onDelete}>\n\t\t\t\t\t\t\t\t<DeleteRounded />\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</td>\n\n\t\t\t\t</>\n\t\t\t\t: <>\n\t\t\t\t\t<td className={s.borderLine}>{props.id}</td>\n\t\t\t\t\t<td className={s.borderLine}>{props.name}</td>\n\t\t\t\t\t<td className={s.borderLine}>{props.email}</td>\n\t\t\t\t\t<td className={s.borderLine}>{props.phone}</td>\n\t\t\t\t\t<td className={s.borderLine}>{props.website}</td>\n\t\t\t\t\t<td className={s.borderLine}>{props.city}</td>\n\t\t\t\t\t<td className={s.borderLine}>{props.street}</td>\n\t\t\t\t\t<td className={s.borderLine}>{props.suite}</td>\n\t\t\t\t\t<td className={s.borderLine}>{props.companyName}</td>\n\t\t\t\t\t<td className={props.isAdmin ? s.borderLine : s.dontShow}>\n\t\t\t\t\t\t<div  onClick={() => setEditMode(true)}>\n\t\t\t\t\t\t\t<IconButton color='primary'>\n\t\t\t\t\t\t\t\t<EditRounded />\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t</div >\n\t\t\t\t\t</td>\n\t\t\t\t\t<td className={props.isAdmin ? s.borderLine : s.dontShow}>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<IconButton color={error ? 'secondary' : 'primary'} onClick={onDelete}>\n\t\t\t\t\t\t\t\t<DeleteRounded />\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</td>\n\t\t\t\t</>\n\t\t\t}\n\t\t</tr>\n\t);\n};","import { IconButton } from '@material-ui/core';\nimport { AddCircleOutline } from '@material-ui/icons';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { UsersResponseType } from '../../api/api';\nimport { AppStateType } from '../../App/store';\nimport { PATH } from '../../components/routes/Pages';\nimport { User } from './User/User';\nimport s from './users.module.css';\n\n\nexport const Users = () => {\n\tconst users = useSelector<AppStateType, UsersResponseType[]>(state => state.users);\n\tconst loggedId = useSelector<AppStateType, number>(state => state.login.loggedId);\n\tconst history = useHistory();\n\tconst isAdmin = loggedId === 1\n\n\n\tconst routeChange = () => {\n\t\thistory.push(PATH.ADD_USER);\n\t};\n\tconst data = [\n\t\t{ name: \"Anom\", age: 19, gender: \"Male\" },\n\t\t{ name: \"Megha\", age: 19, gender: \"Female\" },\n\t\t{ name: \"Subham\", age: 25, gender: \"Male\" },\n\t]\n\tconst titles = [\n\t\t'№',\n\t\t'name',\n\t\t'email',\n\t\t'phone',\n\t\t'website',\n\t\t'city',\n\t\t'street',\n\t\t'suite',\n\t\t'company name',\n\t]\n\tconst adminList = [\n\t\t'№',\n\t\t'name',\n\t\t'email',\n\t\t'phone',\n\t\t'website',\n\t\t'city',\n\t\t'street',\n\t\t'suite',\n\t\t'company name',\n\t\t'edit',\n\t\t'delete'\n\t]\n\treturn (\n\t\t<div className={s.wrapper}>\n\t\t\t<IconButton onClick={routeChange} color='primary'>\n\t\t\t\t<AddCircleOutline /> add user\n\t\t\t</IconButton>\n\t\t\t<table className={s.tableContainer}>\n\t\t\t\t<thead className={s.tableHeader}>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t{isAdmin\n\t\t\t\t\t\t\t? adminList.map((t, i) => {\n\t\t\t\t\t\t\t\treturn <th key={i}>{t}</th>;\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t: titles.map((t, i) => {\n\t\t\t\t\t\t\t\treturn <th key={i}>{t}</th>;\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody className={s.tableBody}>\n\t\t\t\t\t{users &&\n\t\t\t\t\t\tusers.map((item, i) => <User\n\t\t\t\t\t\t\tkey={item.id}\n\t\t\t\t\t\t\tid={item.id}\n\t\t\t\t\t\t\tname={item.name}\n\t\t\t\t\t\t\temail={item.email}\n\t\t\t\t\t\t\tphone={item.phone}\n\t\t\t\t\t\t\twebsite={item.website}\n\t\t\t\t\t\t\tcity={item.address.city}\n\t\t\t\t\t\t\tstreet={item.address.street}\n\t\t\t\t\t\t\tsuite={item.address.suite}\n\t\t\t\t\t\t\tcompanyName={item.company.name}\n\t\t\t\t\t\t\tisAdmin={isAdmin}\n\t\t\t\t\t\t/>)}\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div >\n\t);\n};\n\n","import { GetAppStateType } from './../../../App/store';\nimport { Dispatch } from 'redux';\nimport { setAppErrorAC } from '../../../App/app-reducer';\n\nconst initialState = {\n\tisLoggedIn: false,\n\tloggedId: 0,\n};\n\nexport const loginReducer = (\n\tstate: InitialStateType = initialState,\n\taction: LoginReducerActionTypes\n): InitialStateType => {\n\tswitch (action.type) {\n\t\tcase loginReducerActions.SET_IS_LOGGED_IN:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloggedId: action.id,\n\t\t\t\tisLoggedIn: action.value,\n\t\t\t};\n\t\tcase loginReducerActions.LOG_OUT:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisLoggedIn: false,\n\t\t\t\tloggedId: 0,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\n// AC\nconst loginReducerActions = {\n\tSET_IS_LOGGED_IN: 'login/SET_IS_LOGGED_IN',\n\tLOG_OUT: 'login/LOG_OUT',\n} as const;\n\nexport const setIsLoggedIn = (id: number, value: boolean) =>\n\t({ type: loginReducerActions.SET_IS_LOGGED_IN, id, value } as const);\n\nexport const logOut = () => ({ type: loginReducerActions.LOG_OUT } as const);\n\n\n//Thunks\nexport const LogIn =\n\t(email: string, password: string) =>\n\t\t(dispatch: Dispatch, getState: GetAppStateType) => {\n\t\t\tconst registeredUsers = getState().registration.registeredUsers;\n\t\t\tconst user = registeredUsers.find(\n\t\t\t\tu => u.email === email && u.password === password\n\t\t\t);\n\t\t\tif (user !== undefined) {\n\t\t\t\tdispatch(setIsLoggedIn(user.id, true));\n\t\t\t} else {\n\t\t\t\tdispatch(setAppErrorAC('Not currect email or password'));\n\t\t\t}\n\t\t};\n\n//types\ntype InitialStateType = typeof initialState;\n\nexport type LoginReducerActionTypes =\n\t| ReturnType<typeof setIsLoggedIn>\n\t| ReturnType<typeof logOut>;\n","import React from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AppStateType } from '../../App/store';\nimport { setAppErrorAC } from '../../App/app-reducer';\n\nfunction Alert(props: AlertProps) {\n\treturn <MuiAlert elevation={6} variant='filled' {...props} />;\n}\n\nexport function ErrorSnackbar() {\n\tconst error = useSelector<AppStateType, string | null>(state => state.app.error);\n\tconst dispatch = useDispatch();\n\n\tconst handleClose = (event?: React.SyntheticEvent, reason?: string) => {\n\t\tif (reason === 'clickaway') {\n\t\t\treturn;\n\t\t}\n\t\tdispatch(setAppErrorAC(null));\n\t};\n\n\n\tconst isOpen = error !== null;\n\n\treturn (\n\t\t<Snackbar open={isOpen} autoHideDuration={6000} onClose={handleClose}>\n\t\t\t<Alert onClose={handleClose} severity='error'>\n\t\t\t\t{error}\n\t\t\t</Alert>\n\t\t</Snackbar>\n\t);\n}\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AppStateType } from '../store';\nimport s from './Main.module.css';\nimport { AppBar, Button, IconButton, LinearProgress, Toolbar, Typography } from '@material-ui/core';\nimport { GroupWork } from '@material-ui/icons';\nimport { Users } from '../../features/users/Users';\nimport { getAllUsers } from '../../features/users/users-reducer';\nimport { AppStatusType } from '../app-reducer';\nimport { logOut } from '../../features/authorization/Login/loginReducer';\nimport { ErrorSnackbar } from '../../components/ErrorSnackbar/ErrorSnackbar';\n\n\nexport const Main = () => {\n\tconst isLoggedIn = useSelector<AppStateType, boolean>(state => state.login.isLoggedIn);\n\tconst status = useSelector<AppStateType, AppStatusType>(state => state.app.status);\n\n\tconst dispatch = useDispatch();\n\n\tconst logOutUser = () => {\n\t\tdispatch(logOut());\n\t};\n\tuseEffect(() => {\n\t\tdispatch(getAllUsers());\n\t}, [dispatch]);\n\n\n\treturn (\n\t\t<div className={s.wrapper}>\n\t\t\t<ErrorSnackbar />\n\t\t\t<div className={s.header}>\n\t\t\t\t<AppBar position='static'>\n\t\t\t\t\t<Toolbar className={s.header}>\n\t\t\t\t\t\t<IconButton edge='start' color='inherit' aria-label='menu'>\n\t\t\t\t\t\t\t<GroupWork />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t<Typography variant='h6' >\n\t\t\t\t\t\t\tKPMG\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t{isLoggedIn && <Button color='inherit' onClick={logOutUser}>Log out</Button>}\n\t\t\t\t\t</Toolbar>\n\t\t\t\t\t{status === 'loading' && <LinearProgress />}\n\t\t\t\t</AppBar>\n\t\t\t</div>\n\t\t\t<div className={s.container}>\n\t\t\t\t\t<Users />\n\t\t\t</div>\n\t\t</div>\n\n\t);\n};","import { useFormik } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink, Redirect } from 'react-router-dom';\nimport { AppStateType } from '../../../App/store';\nimport { LogIn } from './loginReducer';\nimport { PATH } from '../../../components/routes/Pages';\nimport s from './Login.module.css';\nimport { Button } from '@material-ui/core';\nimport FormControl from '@material-ui/core/FormControl/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel/FormLabel';\nimport FormGroup from '@material-ui/core/FormGroup/FormGroup';\nimport TextField from '@material-ui/core/TextField/TextField';\nimport { ErrorSnackbar } from '../../../components/ErrorSnackbar/ErrorSnackbar';\n\nexport const Login = () => {\n\tconst isLoggedIn = useSelector<AppStateType, boolean>(state => state.login.isLoggedIn);\n\tconst dispatch = useDispatch();\n\n\ttype FormErrorType = {\n\t\temail?: string\n\t\tpassword?: string\n\t};\n\tconst formik = useFormik({\n\t\tinitialValues: {\n\t\t\temail: 'kpmg@gmail.com',\n\t\t\tpassword: 'admin7777',\n\t\t},\n\t\tvalidate: (values) => {\n\t\t\tconst errors: FormErrorType = {};\n\t\t\tif (!values.email) {\n\t\t\t\terrors.email = 'Required';\n\t\t\t} else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n\t\t\t\terrors.email = 'Invalid email address';\n\t\t\t}\n\n\t\t\tif (!values.password) {\n\t\t\t\terrors.password = 'Required';\n\t\t\t} else if (values.password.length < 3) {\n\t\t\t\terrors.password = 'Must be 3 characters at least';\n\t\t\t}\n\t\t\treturn errors;\n\t\t},\n\t\tonSubmit: values => {\n\t\t\tconst { email, password } = values;\n\t\t\tformik.resetForm();\n\t\t\tdispatch(LogIn(email, password));\n\t\t},\n\t});\n\n\tif (isLoggedIn) {\n\t\treturn <Redirect to={PATH.MAIN} />;\n\t}\n\treturn <div className={s.wrapper}>\n\t\t<div className={s.bgrImg} />\n\t\t<ErrorSnackbar />\n\t\t<div className={s.form}>\n\t\t\t<form onSubmit={formik.handleSubmit}>\n\t\t\t\t<FormControl>\n\t\t\t\t\t<FormLabel>\n\t\t\t\t\t\t<p>To sign up click\n\t\t\t\t\t\t\t<NavLink to={PATH.REGISTER}><b> here</b></NavLink>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</FormLabel>\n\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tclassName={s.inputStyle}\n\t\t\t\t\t\t\tlabel='Email'\n\t\t\t\t\t\t\tmargin='normal'\n\t\t\t\t\t\t\t{...formik.getFieldProps('email')}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t<div className={s.errorStyle}>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tformik.touched.email && formik.errors.email\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\tlabel='Password'\n\t\t\t\t\t\t\tmargin='normal'\n\t\t\t\t\t\t\t{...formik.getFieldProps('password')}\n\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t<div className={s.errorStyle}>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tformik.touched.password && formik.errors.password\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t<Button type={'submit'} variant={'contained'} color={'primary'}>Login</Button>\n\t\t\t\t\t</FormGroup>\n\t\t\t\t</FormControl>\n\t\t\t</form>\n\t\t</div>\n\n\t</div>;\n};\n\n","import { Dispatch } from 'redux';\n\n\n\nconst initialState = {\n  registeredUsers: [\n    { id: 1, email: 'kpmg@gmail.com', password: 'admin7777' }\n  ] as RegisteredUserType[],\n};\n\nexport const registrationReducer = (\n  state: InitialStateType = initialState,\n  action: RegistrationActionTypes\n): InitialStateType => {\n  switch (action.type) {\n    case registrationReducerActions.ADD_REGISTERED_USER:\n      return {\n        ...state,\n        registeredUsers: [...state.registeredUsers, action.payload],\n      };\n    case registrationReducerActions.UPDATE_REGISTERED_USER:\n      return {\n        ...state,\n        registeredUsers: state.registeredUsers.map(u =>\n          u.id === action.payload.id ? { ...u, ...action.payload } : u\n        ),\n      };\n    default:\n      return state;\n  }\n};\n\n// AC\nconst registrationReducerActions = {\n  ADD_REGISTERED_USER: 'reg/ADD_REGISTERED_USER',\n  UPDATE_REGISTERED_USER: 'reg/UPDATE_REGISTERED_USER',\n} as const;\n\nexport const addRegisteredUser = (payload: RegisteredUserType) => {\n  return {\n    type: registrationReducerActions.ADD_REGISTERED_USER,\n    payload,\n  } as const;\n};\n\nexport const updateRegisteredUser = (\n  id: number,\n  firstName: string,\n  lastName: string,\n  email: string\n) => {\n  return {\n    type: registrationReducerActions.UPDATE_REGISTERED_USER,\n    payload: { id, firstName, lastName, email },\n  } as const;\n};\n\n//Thunks\nexport const addUser =\n  (email: string, password: string) =>\n    (dispatch: Dispatch) => {\n      const id = Date.now();\n      dispatch(addRegisteredUser({ id, email, password }));\n    };\n\n//types\ntype InitialStateType = typeof initialState;\n\nexport type RegistrationActionTypes =\n  | ReturnType<typeof addRegisteredUser>\n  | ReturnType<typeof updateRegisteredUser>;\n\nexport type RegisteredUserType = {\n  id: number\n  email: string\n  password: string\n};\n","import { useState } from 'react';\nimport { useFormik } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink, Redirect } from 'react-router-dom';\nimport { AppStateType } from '../../../App/store';\nimport { addUser, RegisteredUserType } from './registReducer';\nimport FormControl from '@material-ui/core/FormControl/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup/FormGroup';\nimport Button from '@material-ui/core/Button/Button';\nimport TextField from '@material-ui/core/TextField/TextField';\nimport s from './Registration.module.css';\nimport { PATH } from '../../../components/routes/Pages';\nimport { FormLabel } from '@material-ui/core';\n\nexport const Registration = () => {\n\tconst registeredUsers = useSelector<AppStateType, RegisteredUserType[]>(state => state.registration.registeredUsers);\n\tconst [editMode, setEditMode] = useState(false);\n\tconst dispatch = useDispatch();\n\n\ttype FormErrorType = {\n\t\temail?: string\n\t\tpassword?: string\n\t\tpasswordCheck?: string\n\t};\n\tconst formik = useFormik({\n\t\tinitialValues: {\n\t\t\temail: '',\n\t\t\tpassword: '',\n\t\t\tpasswordCheck: ''\n\t\t},\n\t\tvalidate: (values) => {\n\t\t\tconst errors: FormErrorType = {};\n\t\t\tconst checkEmail = registeredUsers.find(u => u.email === values.email);\n\t\t\tif (!values.email) {\n\t\t\t\terrors.email = 'required';\n\t\t\t} else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n\t\t\t\terrors.email = 'not valid email';\n\t\t\t} else if (checkEmail !== undefined) {\n\t\t\t\terrors.email = 'this email is already in use';\n\t\t\t}\n\t\t\tif (!values.password) {\n\t\t\t\terrors.password = 'required';\n\t\t\t} else if (values.password.length < 7) {\n\t\t\t\terrors.password = 'needs to be more then 7';\n\t\t\t}\n\t\t\tif (values.password !== values.passwordCheck) {\n\t\t\t\terrors.passwordCheck = 'passwords do not match';\n\t\t\t}\n\t\t\treturn errors;\n\t\t},\n\t\tonSubmit: values => {\n\t\t\tconst { email, password, } = values;\n\t\t\tformik.resetForm();\n\t\t\tdispatch(addUser(email, password));\n\t\t\tsetEditMode(true);\n\t\t},\n\t});\n\n\tif (editMode) {\n\t\treturn <Redirect to={'/'} />;\n\t}\n\treturn <div className={s.wrapper} >\n\t\t<div className={s.bgrImg} />\n\t\t<form onSubmit={formik.handleSubmit}>\n\t\t\t<FormControl >\n\t\t\t\t<FormLabel>\n\t\t\t\t\t<p>To login click\n\t\t\t\t\t\t<NavLink to={PATH.LOGIN}><b> here</b></NavLink>\n\t\t\t\t\t</p>\n\t\t\t\t</FormLabel>\n\t\t\t\t<FormGroup>\n\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tlabel='email'\n\t\t\t\t\t\tmargin='normal'\n\t\t\t\t\t\t{...formik.getFieldProps('email')}\n\t\t\t\t\t/>\n\t\t\t\t\t{\n\t\t\t\t\t\t<div className={s.errorStyle}>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tformik.touched.email && formik.errors.email\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t\t<TextField\n\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\tlabel='password'\n\t\t\t\t\t\tmargin='normal'\n\t\t\t\t\t\t{...formik.getFieldProps('password')}\n\n\t\t\t\t\t/>\n\t\t\t\t\t{\n\t\t\t\t\t\t<div className={s.errorStyle}>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tformik.touched.password && formik.errors.password\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t\t<TextField\n\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\tlabel='password'\n\t\t\t\t\t\tmargin='normal'\n\t\t\t\t\t\t{...formik.getFieldProps('passwordCheck')}\n\n\t\t\t\t\t/>\n\t\t\t\t\t{\n\t\t\t\t\t\t<div className={s.errorStyle}>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tformik.touched.passwordCheck && formik.errors.passwordCheck\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t\t<Button type={'submit'} variant={'contained'} color={'primary'}>sign up</Button>\n\t\t\t\t</FormGroup>\n\t\t\t</FormControl>\n\t\t</form>\n\t</div>;\n};\n","import { useFormik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport FormControl from '@material-ui/core/FormControl/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup/FormGroup';\nimport Button from '@material-ui/core/Button/Button';\nimport TextField from '@material-ui/core/TextField/TextField';\nimport s from './AddUser.module.css';\nimport { addUser } from '../users-reducer';\nimport { useHistory } from 'react-router-dom';\nimport { IconButton } from '@material-ui/core';\nimport { CancelOutlined } from '@material-ui/icons';\n\nexport const AddUser = () => {\n\tconst dispatch = useDispatch();\n\tconst history = useHistory();\n\ttype FormErrorType = {\n\t\tname?: string,\n\t\tusername?: string,\n\t\temail?: string,\n\t\tstreet?: string,\n\t\tsuite?: string,\n\t\tcity?: string,\n\t\tphone?: string,\n\t\twebsite?: string,\n\t\tcompanyName?: string,\n\t\tcatchPhrase?: string,\n\t};\n\tconst formik = useFormik({\n\t\tinitialValues: {\n\t\t\tname: '',\n\t\t\temail: '',\n\t\t\tstreet: '',\n\t\t\tsuite: '',\n\t\t\tcity: '',\n\t\t\tphone: '',\n\t\t\twebsite: '',\n\t\t\tcompanyName: '',\n\t\t},\n\t\tvalidate: (values) => {\n\t\t\tconst errors: FormErrorType = {};\n\t\t\tconst { name, email, street, suite, city, phone, website, companyName } = values;\n\t\t\tif (!name) {\n\t\t\t\terrors.name = 'required';\n\t\t\t} else if (!email) {\n\t\t\t\terrors.email = 'required';\n\t\t\t} else if (!street) {\n\t\t\t\terrors.street = 'required';\n\t\t\t} else if (!suite) {\n\t\t\t\terrors.suite = 'required';\n\t\t\t} else if (!city) {\n\t\t\t\terrors.city = 'required';\n\t\t\t} else if (!phone) {\n\t\t\t\terrors.phone = 'required';\n\t\t\t} else if (!website) {\n\t\t\t\terrors.website = 'required';\n\t\t\t} else if (!companyName) {\n\t\t\t\terrors.companyName = 'required';\n\t\t\t}\n\t\t\treturn errors;\n\t\t},\n\t\tonSubmit: values => {\n\t\t\tformik.resetForm();\n\t\t\tdispatch(addUser({...values, username: '', catchPhrase: ''}));\n\t\t\tgoBack();\n\t\t},\n\t});\n\tconst goBack = () => {\n\t\thistory.goBack();\n\t};\n\treturn <div className={s.wrapper}>\n\t\t<div className={s.content}>\n\t\t\t<IconButton className={s.cancelBtn} onClick={goBack} color='primary'>\n\t\t\t\t<CancelOutlined />\n\t\t\t</IconButton>\n\t\t\t<form onSubmit={formik.handleSubmit}>\n\t\t\t\t<FormControl >\n\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t<div className={s.form}>\n\t\t\t\t\t\t\t<div className={s.left}>\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tlabel='name'\n\t\t\t\t\t\t\t\t\tmargin='normal'\n\t\t\t\t\t\t\t\t\t{...formik.getFieldProps('name')}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t<div className={s.errorStyle}>\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tformik.touched.name && formik.errors.name\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tlabel='email'\n\t\t\t\t\t\t\t\t\tmargin='normal'\n\t\t\t\t\t\t\t\t\t{...formik.getFieldProps('email')}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t<div className={s.errorStyle}>\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tformik.touched.email && formik.errors.email\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tlabel='street'\n\t\t\t\t\t\t\t\t\tmargin='normal'\n\t\t\t\t\t\t\t\t\t{...formik.getFieldProps('street')}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t<div className={s.errorStyle}>\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tformik.touched.street && formik.errors.street\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tlabel='suite'\n\t\t\t\t\t\t\t\t\tmargin='normal'\n\t\t\t\t\t\t\t\t\t{...formik.getFieldProps('suite')}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t<div className={s.errorStyle}>\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tformik.touched.suite && formik.errors.suite\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</div >\n\t\t\t\t\t\t\t<div className={s.right}>\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tlabel='city'\n\t\t\t\t\t\t\t\t\tmargin='normal'\n\t\t\t\t\t\t\t\t\t{...formik.getFieldProps('city')}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t<div className={s.errorStyle}>\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tformik.touched.city && formik.errors.city\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tlabel='phone'\n\t\t\t\t\t\t\t\t\tmargin='normal'\n\t\t\t\t\t\t\t\t\t{...formik.getFieldProps('phone')}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t<div className={s.errorStyle}>\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tformik.touched.phone && formik.errors.phone\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tlabel='website'\n\t\t\t\t\t\t\t\t\tmargin='normal'\n\t\t\t\t\t\t\t\t\t{...formik.getFieldProps('website')}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t<div className={s.errorStyle}>\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tformik.touched.website && formik.errors.website\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tlabel='companyName'\n\t\t\t\t\t\t\t\t\tmargin='normal'\n\t\t\t\t\t\t\t\t\t{...formik.getFieldProps('companyName')}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t<div className={s.errorStyle}>\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tformik.touched.companyName && formik.errors.companyName\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Button type={'submit'} variant={'contained'} color={'primary'}>add</Button>\n\t\t\t\t\t</FormGroup>\n\t\t\t\t</FormControl>\n\t\t\t</form>\n\t\t</div>\n\t</div>;\n};\n","import React, { DetailedHTMLProps, HTMLAttributes } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { AppStateType } from '../../App/store';\nimport { PATH } from '../routes/Pages';\n\ntype DivPropsType = DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>;\n\ntype AuthRedirectPropsType = DivPropsType & {};\n\nexport const AuthRedirect: React.FC<AuthRedirectPropsType> = React.memo(({\n\tchildren,\n\t...restProps\n}) => {\n\tconst isLoggedIn = useSelector<AppStateType, boolean>(state => state.login.isLoggedIn);\n\n\tif (!isLoggedIn) {\n\t\treturn <Redirect to={PATH.LOGIN} />;\n\t}\n\treturn (\n\t\t<>\n\t\t\t<div {...restProps}>\n\t\t\t\t{children}\n\t\t\t</div>\n\t\t</>\n\t);\n});","import { ReactNode } from 'react';\nimport { Main } from '../../App/Main/Main';\nimport { Login } from '../../features/authorization/Login/Login';\nimport { Registration } from '../../features/authorization/Registration/Registration';\nimport { AddUser } from '../../features/users/AddUser/AddUser';\nimport { AuthRedirect } from '../Redirect/AuthRedirect';\n\n\nexport type PageType = {\n\t_id: number;\n\ttitle: string;\n\tpath?: string;\n\tparams?: string;\n\texact?: boolean;\n\tpage: ReactNode;\n};\n\nexport const PATH = {\n\tLOGIN: '/login',\n\tREGISTER: '/register',\n\tMAIN: '/',\n\tADD_USER: '/addUser'\n};\n\nexport const pages: PageType[] = [\n\t{\n\t\t_id: 0, title: 'main', path: '/', exact: true,\n\t\tpage: <AuthRedirect> <Main /> </AuthRedirect>\n\t},\n\t{ _id: 1, title: 'login', path: PATH.LOGIN, exact: true, page: <Login /> },\n\t{ _id: 2, title: 'register', path: PATH.REGISTER, exact: true, page: <Registration /> },\n\t{ \n\t\t_id: 3, title: 'addUser', path: PATH.ADD_USER, exact: true, \n\t\tpage: <AuthRedirect> <AddUser /> </AuthRedirect>\n\t},\n\t{ _id: 777, title: 'error404', page: <div>error404</div> }\n];\n","import { Switch, Route } from 'react-router-dom';\nimport { PageType, pages } from './Pages';\n\nconst mappedRoutes = pages.map((p: PageType) => (\n\t<Route\n\t\tkey={'route-' + p._id}\n\t\tpath={p.path && (p.path + (p.params || ''))}\n\t\texact={p.exact}\n\t\trender={() => p.page}\n\t/>\n));\n\nconst Routes = () => {\n\n\treturn (\n\t\t<Switch>\n\t\t\t{mappedRoutes}\n\t\t</Switch>\n\t);\n};\n\nexport default Routes;\n","import './App.css';\nimport Routes from '../components/routes/Routes';\nimport { Helmet } from 'react-helmet';\nfunction App() {\n\treturn (\n\t\t<div className='App'>\n\t\t\t<Helmet>\n\t\t\t\t<meta charSet='utf-8' />\n\t\t\t\t<title>KPMG</title>\n\t\t\t\t<meta name='description' content='KPMG app' />\n\t\t\t</Helmet>\n\t\t\t<Routes />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import {\n  registrationReducer,\n  RegistrationActionTypes,\n} from './../features/authorization/Registration/registReducer';\nimport { applyMiddleware, combineReducers, compose, createStore } from 'redux';\nimport { ThunkAction } from 'redux-thunk';\nimport thunk from 'redux-thunk';\nimport { loginReducer } from '../features/authorization/Login/loginReducer';\nimport { UsersActionTypes, usersReducer } from '../features/users/users-reducer';\nimport { AppActionTypes, appReducer } from './app-reducer';\n\n\nconst rootReducer = combineReducers({\n  app: appReducer,\n  login: loginReducer,\n  registration: registrationReducer,\n  users: usersReducer\n});\n\nexport type StoreType = typeof store;\n\ntype RootReducerType = typeof rootReducer;\n\nexport type AppStateType = ReturnType<RootReducerType>;\nexport type GetAppStateType = () => AppStateType;\n\nexport type AppActionsType =\n  | RegistrationActionTypes | UsersActionTypes | AppActionTypes;\n\nexport type AppThunkType<ReturnType = void> = ThunkAction<\n  ReturnType,\n  AppStateType,\n  unknown,\n  AppActionsType\n>;\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nexport const store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './App/store';\n\nReactDOM.render(\n  <HashRouter>\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t<App />\n\t\t</Provider>\n\t</React.StrictMode>\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"AddUser_wrapper__2l2si\",\"form\":\"AddUser_form__1d_MO\",\"left\":\"AddUser_left__3Lseq\",\"content\":\"AddUser_content__3Y_oM\",\"cancelBtn\":\"AddUser_cancelBtn__3fgS8\",\"errorStyle\":\"AddUser_errorStyle__3WwZb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Login_wrapper__3wqJ_\",\"bgrImg\":\"Login_bgrImg__r7fQL\",\"inputStyle\":\"Login_inputStyle__36ZuG\",\"errorStyle\":\"Login_errorStyle__3wgQX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Registration_wrapper__2_CXD\",\"bgrImg\":\"Registration_bgrImg__27QJJ\",\"errorStyle\":\"Registration_errorStyle__3H8iK\",\"textField\":\"Registration_textField__1qN6-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Main_wrapper__3rmd_\",\"container\":\"Main_container__33U9l\",\"header\":\"Main_header__24DAZ\",\"title\":\"Main_title__2Ad1Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"users_wrapper__3OSvm\",\"tableContainer\":\"users_tableContainer__1SO6T\",\"tableHeader\":\"users_tableHeader__3zLQU\",\"tableBody\":\"users_tableBody__22v-5\",\"row\":\"users_row__3kd23\"};"],"sourceRoot":""}